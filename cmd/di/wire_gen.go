// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/changchanghwang/wdwb_back/internal/libs/db"
	"github.com/changchanghwang/wdwb_back/internal/libs/sec-client"
	"github.com/changchanghwang/wdwb_back/internal/libs/translate"
	"github.com/changchanghwang/wdwb_back/internal/server"
	infrastructure3 "github.com/changchanghwang/wdwb_back/internal/services/filings/infrastructure"
	application4 "github.com/changchanghwang/wdwb_back/internal/services/holdings/application"
	infrastructure4 "github.com/changchanghwang/wdwb_back/internal/services/holdings/infrastructure"
	presentation4 "github.com/changchanghwang/wdwb_back/internal/services/holdings/presentation"
	application3 "github.com/changchanghwang/wdwb_back/internal/services/investors/application"
	infrastructure2 "github.com/changchanghwang/wdwb_back/internal/services/investors/infrastructure"
	presentation3 "github.com/changchanghwang/wdwb_back/internal/services/investors/presentation"
	application5 "github.com/changchanghwang/wdwb_back/internal/services/ranks/application"
	"github.com/changchanghwang/wdwb_back/internal/services/ranks/domain/services"
	presentation5 "github.com/changchanghwang/wdwb_back/internal/services/ranks/presentation"
	"github.com/changchanghwang/wdwb_back/internal/services/stocks/application"
	"github.com/changchanghwang/wdwb_back/internal/services/stocks/infrastructure"
	"github.com/changchanghwang/wdwb_back/internal/services/stocks/presentation"
	application2 "github.com/changchanghwang/wdwb_back/internal/services/sync/application"
	presentation2 "github.com/changchanghwang/wdwb_back/internal/services/sync/presentation"
)

// Injectors from wire.go:

func InitializeServer() (*server.Server, error) {
	gormDB := db.Init()
	stockRepository := infrastructure.New(gormDB)
	secClientSecClient := secClient.New()
	stockService := application.New(stockRepository, gormDB, secClientSecClient)
	stockController := presentation.New(stockService)
	investorRepository := infrastructure2.New(gormDB)
	filingRepository := infrastructure3.New(gormDB)
	holdingRepository := infrastructure4.New(gormDB)
	syncService := application2.New(secClientSecClient, investorRepository, filingRepository, stockRepository, holdingRepository, gormDB)
	syncController := presentation2.New(syncService)
	translator := translate.New()
	investorService := application3.New(investorRepository, translator, gormDB)
	investorController := presentation3.New(investorService)
	holdingService := application4.New(holdingRepository, stockRepository, translator, gormDB, secClientSecClient)
	holdingController := presentation4.New(holdingService)
	rankEvaluator := services.NewRankEvaluator(holdingRepository, stockRepository, translator)
	rankService := application5.New(holdingRepository, rankEvaluator, gormDB)
	rankController := presentation5.New(rankService)
	route := server.NewRoute(stockController, syncController, investorController, holdingController, rankController)
	serverServer := server.New(route, translator)
	return serverServer, nil
}
